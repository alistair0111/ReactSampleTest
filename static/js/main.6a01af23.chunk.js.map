{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/DishDetailComponent.js","components/AboutComponent.js","components/ContactComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesErrMess","dishesLoading","promotion","promosErrMess","promosLoading","leader","leaderErrMess","leaderLoading","RenderMenuItem","onClick","to","id","width","Menu","menu","dishes","map","key","active","RenderDish","top","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","required","val","length","maxLength","len","CommentForm","toggleModal","bind","state","isModalOpen","this","setState","values","rating","outline","isOpen","toggle","toggleModalOpen","onSubmit","handleSubmit","htmlFor","md","select","model","defaultValue","text","placeholder","validators","minLength","show","messages","textarea","rows","type","color","Component","DishDetail","About","RenderLeader","left","object","body","heading","RenderContent","leaders","title","list","require","maxlength","minlength","isNumber","isNaN","Number","validEmail","test","Contact","console","log","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","htmlfor","size","offset","check","checkbox","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","height","navbar","externalButton","externalButtonClassName","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a01af23.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className= \"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading...</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if(isLoading){\r\n        return (\r\n            <Loading/>\r\n        );\r\n    }\r\n    else if(errMess) {\r\n        return(\r\n        <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <FadeTransform in \r\n                transformProps = {{\r\n                    exitTransform: \"scale(0.5) translateY(-50%)\"\r\n                }}>\r\n                    <Card>\r\n                        <CardImg src={baseUrl + item.image} alt={item.name}/>\r\n                        <CardBody>\r\n                            <CardTitle>{item.name}</CardTitle>\r\n                            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>: null}\r\n                            <CardText>{item.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home(props){\r\n    return(\r\n        <div className='container'>\r\n            <div className='row align-items-start'>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item = {props.dish} \r\n                        errMess={props.dishesErrMess}\r\n                        isLoading={props.dishesLoading}/>\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item = {props.promotion}\r\n                        errMess={props.promosErrMess}\r\n                        isLoading={props.promosLoading}\r\n                        />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item = {props.leader} \r\n                        errMess={props.leaderErrMess}\r\n                        isLoading={props.leaderLoading}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem ({dish, onClick}) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading){\r\n        return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n              <Loading/>\r\n            </div> \r\n          </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return(\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <h4>{ props.dishes.errMess }</h4>\r\n            </div> \r\n          </div>\r\n          );\r\n      }\r\n    else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className='row'>\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className='col-12'>\r\n                        <h3>Menu</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n        \r\n\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport { Card, CardImg, CardBody, CardText, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n// import CommentForm from './CommentFormComponent';\r\nimport {Modal, ModalHeader, Label, Button, ModalBody, Row, Col } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\n\r\n  function  RenderDish({dish}) {\r\n      return (\r\n        // <div className=\"col-12 col-md-5 m-1\">\r\n          <FadeTransform in \r\n                  transformProps = {{\r\n                      exitTransform: 'scale(0.5) translateY(-50%)'\r\n                  }}>\r\n              <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                  <CardTitle>{dish.name}</CardTitle>\r\n                  <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n              </Card>\r\n            </FadeTransform>\r\n          // </div>\r\n      );\r\n    }\r\n  \r\n    function RenderComments({comments, postComment, dishId}) {\r\n    //   \r\n      if (comments != null) {\r\n        return (\r\n          // <div className=\"col-12 col-md-5 m-1\">\r\n          <>\r\n            <h4>Comments</h4>\r\n              <ul className=\"list-unstyled\">\r\n                <Stagger in>\r\n                  {comments.map(comment => {\r\n                    return (\r\n                      <Fade in>\r\n                        <li key={comment.id}>\r\n                          <p>{comment.comment}</p>\r\n                          <p>-- {comment.author} ,{\" \"}\r\n                            {new Intl.DateTimeFormat(\"en-US\", {\r\n                              year: \"numeric\",\r\n                              month: \"short\",\r\n                              day: \"2-digit\"\r\n                            }).format(new Date(Date.parse(comment.date)))}\r\n                          </p>\r\n                        </li>\r\n                      </Fade>\r\n                    );\r\n                  })}\r\n                </Stagger>\r\n              </ul>\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n          {/* </div> */}\r\n        </>\r\n        );\r\n      } else return <div />;\r\n    }\r\n  \r\n    const DishDetail = (props) => {\r\n      if (props.isLoading) {\r\n        return(\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <Loading/>\r\n            </div> \r\n          </div>\r\n          );\r\n      }\r\n      else if (props.errMess) {\r\n        return(\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <h4>{ props.errMess }</h4>\r\n            </div> \r\n          </div>\r\n          );\r\n      }\r\n      if (props.dish != null) {\r\n        return (\r\n        <div className='container'>  \r\n          <div className='row'>\r\n              <Breadcrumb>\r\n                  <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                  <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n              </Breadcrumb>\r\n              <div className='col-12'>\r\n                  <h3>{props.dish.name}</h3>\r\n                  <hr/>\r\n              </div>\r\n          </div>\r\n          <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments} \r\n                          postComment = {props.postComment}\r\n                          dishId = {props.dish.id}/>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n        );\r\n      }\r\n      else {\r\n        return (\r\n          <div>Nope</div>\r\n        );\r\n      }\r\n    }\r\n  \r\n    \r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props){\r\n        super (props);\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.state = {\r\n            isModalOpen: false\r\n          };\r\n\r\n    }\r\n\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment); \r\n    }\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n        <>\r\n            <Button outline onClick={this.toggleModal}><span className=\"fa fa-edit fa-lg\"></span> Submit Comment</Button>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModalOpen} >\r\n                <ModalHeader toggle={this.toggleModalOpen} >Login </ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" defaultValue=\"1\" className=\"form-control\" name=\"rating\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" id=\"author\" className=\"form-control\" name=\"author\" placeholder=\"Your Name\"\r\n                                                    validators={{ required, minLength: minLength(3), maxLength: maxLength(20) }}/>\r\n                                    <Errors className=\"text-danger\" model=\".author\" show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Required. ',\r\n                                                minLength: 'Must be greater than 2 characters. ',\r\n                                                maxLength: 'Must be 20 characters or less. '\r\n                                        }} \r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\r\n                                <Col md={12}>\r\n                                <Control.textarea model=\".comment\" id=\"comment\" rows=\"6\" className=\"form-control\" name=\"comment\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n            </Modal>\r\n            </>    \r\n        );\r\n    }\r\n}\r\n  \r\n  export default DishDetail;","import React from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Media\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { Fade, Stagger } from \"react-animation-components\";\r\n\r\n\r\nfunction About(props) {\r\n    function RenderLeader({ leader }) {\r\n    return (\r\n        <Media className=\"mt-5\">\r\n        <Media left className=\"mr-5\">\r\n            <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n        </Media>\r\n        <Media body>\r\n            <Media heading>{leader.name}</Media>\r\n            <p>{leader.designation}</p>\r\n            {leader.description}\r\n        </Media>\r\n        </Media>\r\n    );\r\n    }\r\n\r\n    function RenderContent({ leaders, isLoading, errMess }) {\r\n        if (isLoading) {\r\n        return <Loading />;\r\n        } else if (errMess) {\r\n        return <h4>{errMess}</h4>;\r\n        } else\r\n        return (\r\n            <Stagger in>\r\n            {props.leaders.leaders.map(leader => (\r\n                <Fade in key={leader.id}>\r\n                <RenderLeader key={leader.id} leader={leader} />\r\n                </Fade>\r\n            ))}\r\n            </Stagger>\r\n        );\r\n    }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/home\">Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className=\"col-12\">\r\n          <h3>About Us</h3>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12 col-md-6\">\r\n          <h2>Our History</h2>\r\n          <p>\r\n            Started in 2010, Ristorante con Fusion quickly established itself as\r\n            a culinary icon par excellence in Hong Kong. With its unique brand\r\n            of world fusion cuisine that can be found nowhere else, it enjoys\r\n            patronage from the A-list clientele in Hong Kong. Featuring four of\r\n            the best three-star Michelin chefs in the world, you never know what\r\n            will arrive on your plate the next time you visit us.\r\n          </p>\r\n          <p>\r\n            The restaurant traces its humble beginnings to{\" \"}\r\n            <em>The Frying Pan</em>, a successful chain started by our CEO, Mr.\r\n            Peter Pan, that featured for the first time the world's best\r\n            cuisines in a pan.\r\n          </p>\r\n        </div>\r\n        <div className=\"col-12 col-md-5\">\r\n          <Card>\r\n            <CardHeader className=\"bg-primary text-white\">\r\n              Facts At a Glance\r\n            </CardHeader>\r\n            <CardBody>\r\n              <dl className=\"row p-1\">\r\n                <dt className=\"col-6\">Started</dt>\r\n                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                <dd className=\"col-6\">$1,250,375</dd>\r\n                <dt className=\"col-6\">Employees</dt>\r\n                <dd className=\"col-6\">40</dd>\r\n              </dl>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Card>\r\n            <CardBody className=\"bg-faded\">\r\n              <blockquote className=\"blockquote\">\r\n                <p className=\"mb-0\">\r\n                  You better cut the pizza in four pieces because I'm not hungry\r\n                  enough to eat six.\r\n                </p>\r\n                <footer className=\"blockquote-footer\">\r\n                  Yogi Berra,\r\n                  <cite title=\"Source Title\">\r\n                    The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books,\r\n                    2014\r\n                  </cite>\r\n                </footer>\r\n              </blockquote>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12\">\r\n          <h2>Corporate Leadership</h2>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Media list>\r\n            <RenderContent\r\n              leaders={props.leader}\r\n              isLoading={props.leaderLoading}\r\n              errMess={props.leaderErrMess}\r\n            />\r\n          </Media>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form'\r\n\r\n\r\n\r\nconst require = (val) => val && val.length;\r\nconst maxlength = (len) => (val) => !(val) || (val.length<=len);\r\nconst minlength = (len) => (val) => (val) && (val.length>=len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) =>  /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/i.test(val);\r\n\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n   \r\n\r\n\r\n    handleSubmit(values){\r\n        console.log(\"Current State is \"+ JSON.stringify(values));\r\n        // alert(\"Current State is \"+ JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n        \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className='col-12'>\r\n                        <h3>Contact Us</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"www.skype.com\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className = \"row  row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send Us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model='feedback' onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"firstname\" md={3}>First Name</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                            placeholder=\"First Name\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                require, minlength : minlength(3), maxlength: maxlength(15)\r\n                                            }}\r\n                                            />\r\n                                    <Errors\r\n                                        className='text-danger'\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            require: 'Required.\\t',\r\n                                            minlength: \"Must be greater than 2 characters\",\r\n                                            maxlength: \"Must be 15 characters or less\"\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"lastname\" md={3}>Last Name</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                            placeholder=\"Last Name\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                require, minlength : minlength(3), maxlength: maxlength(15)\r\n                                            }}\r\n                                            />\r\n                                    <Errors\r\n                                        className='text-danger'\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            require: 'Required.\\t',\r\n                                            minlength: \"Must be greater than 2 characters\",\r\n                                            maxlength: \"Must be 15 characters or less\"\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"telnum\" md={3}>Contact Tel.</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                            placeholder=\"Tel. Num\"\r\n                                            className='form-control'\r\n                                            validators={{\r\n                                                require, minlength : minlength(3), maxlength: maxlength(15), isNumber\r\n                                            }}\r\n                                            />\r\n                                    <Errors\r\n                                        className='text-danger'\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            require: 'Required.\\t',\r\n                                            minlength: \"Must be greater than 2 numbers. \",\r\n                                            maxlength: \"Must be 15 numbers or less. \",\r\n                                            isNumber: \"Must be a number.\"\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"email\" md={3}>Email</Label>\r\n                                <Col md={9}>\r\n                                    <Control.text model='.email' id=\"email\" name=\"email\"\r\n                                            placeholder=\"Email\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                require, minlength : minlength(9), maxlength: maxlength(35), validEmail\r\n                                            }}\r\n                                    />\r\n                                    <Errors\r\n                                        className='text-danger'\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            require: 'Required.\\t',\r\n                                            validEmail: \"Not a valid Email.\\n\"\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model='.agree' name=\"agree\"\r\n                                                className=\"form-check-input\"/>{' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model='.contactType' name=\"contactType\"\r\n                                        className='form-control'>\r\n                                            <option>Tel.</option>\r\n                                            <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlfor=\"message\" md={3}>Your Feedback</Label>\r\n                                <Col md={9}>\r\n                                    <Control.textarea model='.message' id=\"message\" name=\"message\"\r\n                                            rows=\"12\"\r\n                                            className=\"form-control\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 9, offset: 3}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand,Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Modal, Button, ModalHeader, ModalBody, FormGroup, Input, Label, Form } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen : false,\r\n            isModalOpen:  false\r\n        }\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \"+ this.username.value + \" Password: \"+this.password.value \r\n                +\" Remember: \" +this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <> \r\n            {/*React fragment*/}\r\n                <Navbar dark expand='md'>\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav}/>\r\n                        <NavbarBrand className='mr-auto' href=\"/\">\r\n                            <img src='assets/images/logo.png' height='30' width='41'\r\n                                alt='Ristorante Com fusion'/>\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/home'>\r\n                                        <span className=\"fa fa-home fa-lg\"></span>Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'>\r\n                                        <span className=\"fa fa-info fa-lg\"></span>AboutUs\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/menu'>\r\n                                        <span className=\"fa fa-list fa-lg\"></span>Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'>\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span>ContactUs\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick = {this.toggleModal}>\r\n                                        <span className='fa fa-sign-in fa-lg'></span> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                    </Navbar>\r\n                    <Jumbotron>\r\n                        <div className='container'>\r\n                            <div className='row row-header'>\r\n                                <div className='col-12 col-sm-6'>\r\n                                    <h1>Ristorante Con Fusion</h1>\r\n                                    <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Jumbotron>\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModalOpen} externalButton externalButtonClassName=\"cool-close-button\" >\r\n                        <ModalHeader toggle={this.toggleModalOpen} >Login </ModalHeader>\r\n                        <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                        </ModalBody>\r\n                    </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>    \r\n    )\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n    return fetch(baseUrl+'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if (response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error = new Error('Error '+ response.status + ': '+ response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => { console.log('Post COmments', error.message)\r\n        alert('Your comment could not be posted\\nError: '+error.message);});\r\n}\r\n\r\n\r\nexport const fetchDishes = () =>(dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error = new Error('Error '+ response.status + ': '+ response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error = new Error('Error '+ response.status + ': '+ response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error = new Error('Error '+ response.status + ': '+ response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => dispatch => {\r\n    dispatch(leadersLoading())\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error = new Error('Error '+ response.status + ': '+ response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = errmess => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = leaders => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n      firstname: firstname,\r\n      lastname: lastname,\r\n      telnum: telnum,\r\n      email: email,\r\n      agree: agree,\r\n      contactType: contactType,\r\n      message: message,\r\n    }\r\n  \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n      })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n        else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      })\r\n      .then(response => response.json())\r\n      .then(response => {alert(\"Thank you for your feedback!\" + JSON.stringify(response)); return response;})\r\n      .catch(error => {\r\n        console.log('post feedback ', error.message);\r\n        alert('Your feedback could not be posted\\nError: ' + error.message);\r\n      });\r\n  \r\n  };\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\r\nexport const ADD_LEADERS = \"ADD_LEADERS\";\r\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport About from './AboutComponent';\r\nimport Contact from './ContactComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchComments, fetchDishes, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  dishes: state.dishes,\r\n  comments: state.comments,\r\n  promotions: state.promotions,\r\n  leaders: state.leaders\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => {dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => {dispatch(fetchComments())},\r\n  fetchPromos: () => {dispatch(fetchPromos())},\r\n  fetchLeaders: () => {dispatch(fetchLeaders())},\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message))\r\n});\r\n\r\n\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n    \r\n    const HomePage = () => {\r\n      return(\r\n        <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n            dishesLoading={this.props.dishes.isLoading}\r\n            dishesErrMess = {this.props.dishes.errMess}\r\n            promotion={this.props.promotions.promotions.filter((promotion) => promotion.featured)[0]}\r\n            promosLoading={this.props.promotions.isLoading}\r\n            promosErrMess = {this.props.promotions.errMess}\r\n            leader={this.props.leaders.leaders.filter(leader => leader.featured)[0]}\r\n            leaderLoading={this.props.leaders.isLoading}\r\n            leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish = {this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]} \r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess = {this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n          commentsErrMess = {this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames='page' timeout={300}>\r\n            <Switch>\r\n              <Route path=\"/home\" component={HomePage}/>\r\n              <Route exact path=\"/menu\" component={() => <Menu dishes = {this.props.dishes}/>}/>\r\n              <Route path='/menu/:dishId' component= {DishWithId} />\r\n              <Route exact path=\"/contactus\" component={() => <Contact  postFeedback={this.props.postFeedback} resetFeedbackForm = { this.props.resetFeedbackForm }/>}/>\r\n              <Route exact path=\"/aboutus\" component={() => <About leaders = {this.props.leaders}/>}/>\r\n              <Redirect to=\"/home\"/>\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer/>\r\n      </div>  \r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes : []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []};\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = ( state = {\r\n        errMess: null,\r\n        comments: []\r\n    }, action ) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            \r\n            console.log(\"Comment: \", comment)\r\n            return {...state,comments : state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const  Promotions = (state = { \r\n                                        isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]} , action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n    \r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const  Leaders = (\r\n    state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_LEADERS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        leaders: action.payload\r\n      };\r\n\r\n    case ActionTypes.LEADERS_LOADING:\r\n      return { ...state, isLoading: true, errMess: null, leaders: [] };\r\n\r\n    case ActionTypes.LEADERS_FAILED:\r\n      return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n      <BrowserRouter>\n        <div>    \n          <Main />\n        </div>\n      </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }), \r\n        applyMiddleware(thunk, logger)\r\n\r\n    );\r\n\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}